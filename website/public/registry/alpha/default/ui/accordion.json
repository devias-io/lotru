{
  "id": "ui/accordion",
  "name": "Accordion",
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "path": "ui/accordion.tsx",
      "content": "import * as React from \"react\";\nimport { Accordion as Primitive } from \"@base-ui-components/react/accordion\";\nimport { css, styled } from \"@pigment-css/react\";\nimport { ChevronDownIcon } from \"lucide-react\";\n\nimport { cn } from \"@/lib/cn\";\n\nconst Accordion = styled(Primitive.Root, {\n  name: \"Accordion\",\n  slot: \"root\",\n})<React.ComponentProps<typeof Primitive.Root>>({\n  boxSizing: \"border-box\",\n});\n\nconst AccordionItem = styled(Primitive.Item, {\n  name: \"AccordionItem\",\n  slot: \"item\",\n})<React.ComponentProps<typeof Primitive.Item>>({\n  borderBlockEnd: \"1px solid hsl(var(--color-border))\",\n  boxSizing: \"border-box\",\n});\n\nconst AccordionTrigger = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<typeof Primitive.Trigger>) => {\n  return (\n    <Primitive.Header className={css({ boxSizing: \"border-box\", display: \"flex\", margin: 0 })}>\n      <Primitive.Trigger\n        className={cn(\n          css({\n            alignItems: \"center\",\n            appearance: \"none\",\n            backgroundColor: \"transparent\",\n            border: \"none\",\n            boxSizing: \"border-box\",\n            cursor: \"pointer\",\n            display: \"flex\",\n            flexGrow: 1,\n            fontFamily: \"inherit\",\n            fontSize: \"var(--fontSize-sm)\",\n            fontWeight: \"var(--fontWeight-medium)\",\n            gap: \"calc(var(--size-unit) * 2)\",\n            justifyContent: \"space-between\",\n            paddingBlock: \"calc(var(--size-unit) * 4)\",\n            paddingInline: 0,\n            textAlign: \"start\",\n            \"&:focus-visible\": {\n              \"--ring-offset-width\": \"2px\",\n              \"--ring-offset-color\": \"hsl(var(--color-background))\",\n              \"--ring-offset-shadow\": \"0 0 0 var(--ring-offset-width) var(--ring-offset-color)\",\n              \"--ring-width\": \"2px\",\n              \"--ring-color\": \"hsl(var(--color-ring))\",\n              \"--ring-shadow\":\n                \"0 0 0 calc(var(--ring-offset-width) + var(--ring-width)) var(--ring-color)\",\n              boxShadow: \"var(--ring-offset-shadow), var(--ring-shadow), var(--shadow, 0 0 #0000)\",\n              outline: \"none\",\n            },\n            \"&:hover\": {\n              textDecoration: \"underline\",\n            },\n          } as React.CSSProperties),\n          className as string\n        )}\n        {...props}\n      >\n        {children}\n        <ChevronDownIcon\n          className={css({\n            boxSizing: \"border-box\",\n            color: \"hsl(var(--color-mutedForeground))\",\n            flexShrink: 0,\n            height: \"calc(var(--size-unit) * 4)\",\n            transitionDuration: \"var(--duration-normal)\",\n            transitionProperty: \"opacity, transform\",\n            transitionTimingFunction: \"var(--easing-default)\",\n            width: \"calc(var(--size-unit) * 4)\",\n            \"[data-panel-open]\": {\n              transform: \"rotate(180deg) scale(1.1)\",\n            },\n          })}\n        />\n      </Primitive.Trigger>\n    </Primitive.Header>\n  );\n};\nAccordionTrigger.displayName = \"AccordionTrigger\";\n\nconst AccordionContent = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<typeof Primitive.Panel>) => {\n  return (\n    <Primitive.Panel\n      className={cn(\n        css({\n          boxSizing: \"border-box\",\n          fontSize: \"var(--fontSize-sm)\",\n          height: \"var(--accordion-panel-height)\",\n          overflow: \"hidden\",\n          transitionDuration: \"var(--duration-fast)\",\n          transitionProperty: \"height\",\n          transitionTimingFunction: \"var(--easing-default)\",\n          \"&[data-starting-style], &[data-ending-style]\": {\n            height: 0,\n          },\n        }),\n        className as string\n      )}\n      {...props}\n    >\n      <div\n        className={css({\n          paddingBlockEnd: \"calc(var(--size-unit) * 4)\",\n        })}\n      >\n        {children}\n      </div>\n    </Primitive.Panel>\n  );\n};\nAccordionContent.displayName = \"AccordionContent\";\n\nexport { Accordion, AccordionContent, AccordionItem, AccordionTrigger };\n"
    }
  ]
}