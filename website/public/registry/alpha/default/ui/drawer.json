{
  "id": "ui/drawer",
  "name": "Drawer",
  "dependencies": [
    "@base-ui-components/react"
  ],
  "files": [
    {
      "path": "ui/drawer.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Dialog as Primitive } from \"@base-ui-components/react/dialog\";\nimport { styled } from \"@pigment-css/react\";\n\nconst Drawer = (props: React.ComponentProps<typeof Primitive.Root>): React.JSX.Element => (\n  <Primitive.Root {...props} />\n);\nDrawer.displayName = \"Drawer\";\n\nconst DrawerTrigger = (props: React.ComponentProps<typeof Primitive.Trigger>) => (\n  <Primitive.Trigger {...props} />\n);\nDrawerTrigger.displayName = \"DrawerTrigger\";\n\nconst DrawerClose = (props: React.ComponentProps<typeof Primitive.Close>) => (\n  <Primitive.Close {...props} />\n);\nDrawerClose.displayName = \"DrawerClose\";\n\nconst DrawerOverlay = styled(Primitive.Backdrop, {\n  name: \"DrawerOverlay\",\n  slot: \"overlay\",\n})<React.ComponentProps<typeof Primitive.Backdrop>>({\n  backgroundColor: \"hsl(var(--color-overlay))\",\n  inset: 0,\n  position: \"fixed\",\n  zIndex: \"var(--zIndex-overlay)\",\n});\n\nconst DrawerContent = styled(Primitive.Popup, {\n  name: \"DrawerContent\",\n  slot: \"content\",\n  shouldForwardProp: (prop) => prop !== \"side\",\n})<\n  React.ComponentProps<typeof Primitive.Popup> & {\n    side: \"bottom\" | \"top\";\n  }\n>({\n  backgroundColor: \"hsl(var(--color-surface))\",\n  boxSizing: \"border-box\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  height: \"auto\",\n  insetInlineEnd: 0,\n  insetInlineStart: 0,\n  position: \"fixed\",\n  transitionDuration: \"var(--duration-normal)\",\n  transitionProperty: \"transform\",\n  transitionTimingFunction: \"var(--easing-default)\",\n  willChange: \"transform\",\n  zIndex: \"var(--zIndex-modal)\",\n  \"&:focus-visible\": {\n    outline: \"none\",\n  },\n  \"&[data-open]\": {\n    transform: \"translateY(0)\",\n  },\n  variants: [\n    {\n      props: { side: \"bottom\" },\n      style: {\n        borderTopLeftRadius: \"var(--borderRadius-lg)\",\n        borderTopRightRadius: \"var(--borderRadius-lg)\",\n        insetBlockEnd: 0,\n        marginBlockStart: \"calc(var(--spacing-unit) * 24)\",\n        transform: \"translateY(100%)\",\n        \"&[data-starting-style], &[data-ending-style]\": {\n          transform: \"translateY(100%)\",\n        },\n      },\n    },\n    {\n      props: { side: \"top\" },\n      style: {\n        borderBottomLeftRadius: \"var(--borderRadius-lg)\",\n        borderBottomRightRadius: \"var(--borderRadius-lg)\",\n        insetBlockStart: 0,\n        marginBlockEnd: \"calc(var(--spacing-unit) * 24)\",\n        transform: \"translateY(-100%)\",\n        \"&[data-starting-style], &[data-ending-style]\": {\n          transform: \"translateY(-100%)\",\n        },\n      },\n    },\n  ],\n});\n\nconst DrawerHeader = styled(\"div\", {\n  name: \"DrawerHeader\",\n  slot: \"header\",\n})<React.ComponentProps<\"div\">>({\n  boxSizing: \"border-box\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: \"calc(var(--spacing-unit) * 2)\",\n  padding: \"calc(var(--spacing-unit) * 4)\",\n  textAlign: \"center\",\n  \"@media (min-width: 768px)\": {\n    textAlign: \"start\",\n  },\n});\n\nconst DrawerTitle = styled(Primitive.Title, {\n  name: \"DrawerTitle\",\n  slot: \"title\",\n})<React.ComponentProps<typeof Primitive.Title>>({\n  fontSize: \"var(--fontSize-lg)\",\n  fontWeight: \"var(--fontWeight-semibold)\",\n  marginBlock: 0,\n});\n\nconst DrawerDescription = styled(Primitive.Description, {\n  name: \"DrawerDescription\",\n  slot: \"description\",\n})<React.ComponentProps<typeof Primitive.Description>>({\n  color: \"hsl(var(--color-mutedForeground))\",\n  fontSize: \"var(--fontSize-sm)\",\n  lineHeight: \"var(--lineHeight-tight)\",\n  marginBlock: 0,\n});\n\nconst DrawerFooter = styled(\"div\", {\n  name: \"DrawerFooter\",\n  slot: \"footer\",\n})<React.ComponentProps<\"div\">>({\n  boxSizing: \"border-box\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: \"calc(var(--spacing-unit) * 2)\",\n  marginBlockStart: \"auto\",\n  padding: \"calc(var(--spacing-unit) * 4)\",\n});\n\nexport {\n  Drawer,\n  DrawerClose,\n  DrawerContent,\n  DrawerDescription,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  DrawerTitle,\n  DrawerTrigger,\n};\n"
    }
  ]
}