{
  "id": "ui/dropdown-menu",
  "name": "Dropdown Menu",
  "dependencies": [
    "@base-ui-components/react"
  ],
  "files": [
    {
      "path": "ui/dropdown-menu.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Menu as Primitive } from \"@base-ui-components/react/menu\";\nimport { styled } from \"@pigment-css/react\";\n\nconst DropdownMenu = (props: React.ComponentProps<typeof Primitive.Root>) => (\n  <Primitive.Root {...props} />\n);\nDropdownMenu.displayName = \"DropdownMenu\";\n\nconst DropdownMenuTrigger = (props: React.ComponentProps<typeof Primitive.Trigger>) => (\n  <Primitive.Trigger {...props} />\n);\nDropdownMenuTrigger.displayName = \"DropdownMenuTrigger\";\n\nconst DropdownMenuPortal = (props: React.ComponentProps<typeof Primitive.Portal>) => (\n  <Primitive.Portal {...props} />\n);\nDropdownMenuPortal.displayName = \"DropdownMenuPortal\";\n\nconst DropdownMenuPositioner = styled(Primitive.Positioner, {\n  name: \"DropdownMenuPositioner\",\n  slot: \"positioner\",\n})({\n  zIndex: \"var(--zIndex-popover)\",\n});\n\nconst DropdownMenuContent = styled(Primitive.Popup, {\n  name: \"DropdownMenuContent\",\n  slot: \"content\",\n})<React.ComponentProps<typeof Primitive.Popup>>({\n  backgroundColor: \"hsl(var(--color-surface))\",\n  border: \"1px solid hsl(var(--color-border))\",\n  borderRadius: \"var(--borderRadius-lg)\",\n  boxShadow: \"var(--shadow-md)\",\n  boxSizing: \"border-box\",\n  minWidth: \"8rem\",\n  padding: \"var(--spacing-unit)\",\n  \"&:focus-visible\": {\n    outline: \"none\",\n  },\n});\n\nconst DropdownMenuLabel = styled(\"div\", {\n  name: \"DropdownMenuLabel\",\n  slot: \"label\",\n})<React.ComponentProps<\"div\">>({\n  fontSize: \"var(--fontSize-sm)\",\n  fontWeight: \"var(--fontWeight-semibold)\",\n  paddingBlock: \"calc(var(--spacing-unit) * 1.5)\",\n  paddingInline: \"calc(var(--spacing-unit) * 2)\",\n});\n\nconst DropdownMenuItem = styled(Primitive.Item, {\n  name: \"DropdownMenuItem\",\n  slot: \"item\",\n})<React.ComponentProps<typeof Primitive.Item>>({\n  alignItems: \"center\",\n  borderRadius: \"var(--borderRadius-md)\",\n  boxSizing: \"border-box\",\n  cursor: \"pointer\",\n  display: \"flex\",\n  fontSize: \"var(--fontSize-sm)\",\n  gap: \"calc(var(--spacing-unit) * 2)\",\n  lineHeight: \"var(--lineHeight-tight)\",\n  paddingBlock: \"calc(var(--spacing-unit) * 1.5)\",\n  paddingInline: \"calc(var(--spacing-unit) * 2)\",\n  position: \"relative\",\n  userSelect: \"none\",\n  \"&:hover:not([data-disabled])\": {\n    backgroundColor: \"hsl(var(--color-primary) / 10%)\",\n  },\n  \"&:focus-visible\": {\n    outline: \"none\",\n  },\n  \"&[data-disabled]\": {\n    cursor: \"not-allowed\",\n    opacity: 0.5,\n  },\n  \"& svg\": {\n    flexShrink: 0,\n    fontSize: \"1rem\",\n    height: \"1rem\",\n    pointerEvents: \"none\",\n    width: \"1rem\",\n  },\n});\n\nconst DropdownMenuShortcut = styled(\"span\", {\n  name: \"DropdownMenuShortcut\",\n  slot: \"shortcut\",\n})<React.ComponentProps<\"span\">>({\n  boxSizing: \"border-box\",\n  color: \"hsl(var(--color-mutedForeground))\",\n  fontSize: \"var(--fontSize-xs)\",\n  marginInlineStart: \"auto\",\n});\n\nconst DropdownMenuSeparator = styled(Primitive.Separator, {\n  name: \"MenuSeparator\",\n  slot: \"separator\",\n})<React.ComponentProps<typeof Primitive.Separator>>({\n  backgroundColor: \"hsl(var(--color-border))\",\n  boxSizing: \"border-box\",\n  height: \"1px\",\n  marginBlock: \"var(--spacing-unit)\",\n  marginInline: \"calc(var(--spacing-unit) * -1)\",\n});\n\nconst DropdownMenuGroup = Primitive.Group;\n\nconst DropdownMenuGroupLabel = styled(Primitive.GroupLabel, {\n  name: \"MenuGroupLabel\",\n  slot: \"groupLabel\",\n})<React.ComponentProps<typeof Primitive.GroupLabel>>({\n  boxSizing: \"border-box\",\n  fontSize: \"var(--fontSize-sm)\",\n  fontWeight: \"var(--fontWeight-medium)\",\n  paddingBlock: \"calc(var(--spacing-unit) * 1.5)\",\n  paddingInline: \"calc(var(--spacing-unit) * 2)\",\n});\n\nexport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuGroupLabel,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuPortal,\n  DropdownMenuPositioner,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuTrigger,\n};\n"
    }
  ]
}