{
  "id": "ui/tabs",
  "name": "Tabs",
  "dependencies": [
    "@base-ui-components/react"
  ],
  "files": [
    {
      "path": "ui/tabs.tsx",
      "content": "import * as React from \"react\";\nimport { Tabs as Primitive } from \"@base-ui-components/react/tabs\";\nimport { styled } from \"@pigment-css/react\";\n\nconst Tabs = Primitive.Root;\n\nconst TabsList = styled(Primitive.List, {\n  name: \"TabsList\",\n  slot: \"list\",\n})<React.ComponentProps<typeof Primitive.List>>({\n  alignItems: \"center\",\n  backgroundColor: \"hsl(var(--color-muted))\",\n  borderRadius: \"var(--borderRadius-md)\",\n  boxSizing: \"border-box\",\n  color: \"hsl(var(--color-mutedForeground))\",\n  display: \"inline-flex\",\n  height: \"calc(var(--size-unit) * 10)\",\n  justifyContent: \"center\",\n  padding: \"var(--spacing-unit)\",\n  position: \"relative\",\n});\n\nconst TabsTrigger = styled(Primitive.Tab, {\n  name: \"TabsTrigger\",\n  slot: \"trigger\",\n})<React.ComponentProps<typeof Primitive.Tab>>({\n  alignItems: \"center\",\n  appearance: \"none\",\n  background: \"none\",\n  border: \"none\",\n  borderRadius: \"var(--borderRadius-md)\",\n  boxSizing: \"border-box\",\n  color: \"inherit\",\n  cursor: \"pointer\",\n  display: \"flex\",\n  fontFamily: \"inherit\",\n  fontSize: \"var(--fontSize-sm)\",\n  fontWeight: \"var(--fontWeight-medium)\",\n  height: \"calc(var(--size-unit) * 8)\",\n  justifyContent: \"center\",\n  lineHeight: \"var(--lineHeight-tight)\",\n  paddingBlock: \"calc(var(--spacing-unit) * 1.5)\",\n  paddingInline: \"calc(var(--spacing-unit) * 3)\",\n  transitionDuration: \"var(--duration-normal)\",\n  transitionProperty: \"all\",\n  transitionTimingFunction: \"var(--easing-default)\",\n  whiteSpace: \"nowrap\",\n  \"&:focus-visible\": {\n    \"--ring-offset-width\": \"2px\",\n    \"--ring-offset-color\": \"hsl(var(--color-background))\",\n    \"--ring-offset-shadow\": \"0 0 0 var(--ring-offset-width) var(--ring-offset-color)\",\n    \"--ring-width\": \"2px\",\n    \"--ring-color\": \"hsl(var(--color-ring))\",\n    \"--ring-shadow\": \"0 0 0 calc(var(--ring-offset-width) + var(--ring-width)) var(--ring-color)\",\n    boxShadow: \"var(--ring-offset-shadow), var(--ring-shadow), var(--shadow, 0 0 #0000)\",\n    outline: \"none\",\n  },\n  \"&[data-disabled]\": {\n    cursor: \"not-allowed\",\n    opacity: 0.5,\n  },\n  \"&[data-selected]\": {\n    backgroundColor: \"hsl(var(--color-background))\",\n    boxShadow: \"var(--shadow-sm)\",\n    color: \"hsl(var(--color-foreground))\",\n  },\n} as React.CSSProperties);\n\nconst TabsContent = styled(Primitive.Panel, {\n  name: \"TabsContent\",\n  slot: \"content\",\n})<React.ComponentProps<typeof Primitive.Panel>>({\n  boxSizing: \"border-box\",\n  marginBlockStart: \"calc(var(--spacing-unit) * 2)\",\n  \"&:focus-visible\": {\n    outline: \"none\",\n  },\n});\n\nconst TabsIndicator = styled(Primitive.Indicator, {\n  name: \"TabsIndicator\",\n  slot: \"indicator\",\n})<React.ComponentProps<typeof Primitive.Indicator>>({\n  backgroundColor: \"hsl(var(--color-primary))\",\n  borderRadius: \"var(--borderRadius-md)\",\n  height: \"2px\",\n  insetBlockEnd: \"var(--active-tab-bottom)\",\n  insetInlineEnd: \"var(--active-tab-right)\",\n  insetInlineStart: \"var(--active-tab-left)\",\n  position: \"absolute\",\n});\n\nexport { Tabs, TabsTrigger, TabsList, TabsContent, TabsIndicator };\n"
    }
  ]
}