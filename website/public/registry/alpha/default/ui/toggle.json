{
  "id": "ui/toggle",
  "name": "Toggle",
  "dependencies": [
    "@base-ui-components/react"
  ],
  "files": [
    {
      "path": "ui/toggle.tsx",
      "content": "import * as React from \"react\";\nimport { styled } from \"@pigment-css/react\";\nimport { Toggle as Primitive } from \"@base-ui-components/react/toggle\";\n\nconst ToggleRoot = styled(Primitive, {\n  name: \"Toggle\",\n  slot: \"root\",\n})<\n  React.ComponentProps<typeof Primitive> & {\n    size: \"sm\" | \"md\" | \"lg\";\n    variant: \"outline\" | \"ghost\";\n  }\n>({\n  alignItems: \"center\",\n  appearance: \"none\",\n  backgroundColor: \"transparent\",\n  borderRadius: \"var(--borderRadius-md)\",\n  boxSizing: \"border-box\",\n  color: \"hsl(var(--color-foreground))\",\n  cursor: \"pointer\",\n  display: \"inline-flex\",\n  fontSize: \"var(--fontSize-sm)\",\n  fontWeight: \"var(--fontWeight-medium)\",\n  gap: \"calc(var(--space-md) * 2)\",\n  justifyContent: \"center\",\n  transitionDuration: \"var(--duration-normal)\",\n  transitionProperty: \"background-color\",\n  transitionTimingFunction: \"var(--easing-default)\",\n  whiteSpace: \"nowrap\",\n  \"&:hover:not(:disabled):not([data-pressed])\": {\n    backgroundColor: \"hsl(var(--color-muted))\",\n    color: \"hsl(var(--color-mutedForeground))\",\n  },\n  \"&[data-pressed]\": {\n    backgroundColor: \"hsl(var(--color-muted))\",\n    color: \"hsl(var(--color-foreground))\",\n  },\n  \"&:focus-visible\": {\n    \"--ring-offset-width\": \"2px\",\n    \"--ring-offset-color\": \"hsl(var(--color-background))\",\n    \"--ring-offset-shadow\": \"0 0 0 var(--ring-offset-width) var(--ring-offset-color)\",\n    \"--ring-width\": \"2px\",\n    \"--ring-color\": \"hsl(var(--color-ring))\",\n    \"--ring-shadow\": \"0 0 0 calc(var(--ring-offset-width) + var(--ring-width)) var(--ring-color)\",\n    boxShadow: \"var(--ring-offset-shadow), var(--ring-shadow), var(--shadow, 0 0 #0000)\",\n    outline: \"none\",\n  },\n  \"&:disabled\": {\n    cursor: \"not-allowed\",\n    opacity: 0.5,\n  },\n  \"& svg\": {\n    flexShrink: 0,\n    fontSize: \"1.1em\",\n    height: \"1.1em\",\n    pointerEvents: \"none\",\n    width: \"1.1em\",\n  },\n  variants: [\n    {\n      props: { variant: \"outline\" },\n      style: {\n        border: \"1px solid hsl(var(--color-border))\",\n      },\n    },\n    {\n      props: { variant: \"ghost\" },\n      style: {\n        border: \"none\",\n      },\n    },\n    {\n      props: { size: \"sm\" },\n      style: {\n        height: \"calc(var(--size-unit) * 8)\",\n        minWidth: \"calc(var(--size-unit) * 8)\",\n        paddingInline: \"calc(var(--spacing-unit) * 1.5)\",\n      },\n    },\n    {\n      props: { size: \"md\" },\n      style: {\n        height: \"calc(var(--size-unit) * 9)\",\n        minWidth: \"calc(var(--size-unit) * 9)\",\n        paddingInline: \"calc(var(--spacing-unit) * 2)\",\n      },\n    },\n    {\n      props: { size: \"lg\" },\n      style: {\n        height: \"calc(var(--size-unit) * 9)\",\n        minWidth: \"calc(var(--size-unit) * 9)\",\n        paddingInline: \"calc(var(--spacing-unit) * 2)\",\n      },\n    },\n    {\n      props: { size: \"lg\" },\n      style: {\n        height: \"calc(var(--size-unit) * 10)\",\n        minWidth: \"calc(var(--size-unit) * 10)\",\n        paddingInline: \"calc(var(--spacing-unit) * 2.5)\",\n      },\n    },\n  ],\n} as React.CSSProperties);\n\nconst Toggle = ({\n  size = \"md\",\n  variant = \"ghost\",\n  ...props\n}: React.ComponentProps<typeof Primitive> & {\n  size?: \"sm\" | \"md\" | \"lg\";\n  variant?: \"outline\" | \"ghost\";\n}) => {\n  return <ToggleRoot size={size} variant={variant} {...props} />;\n};\n\nexport { Toggle };\n"
    }
  ]
}