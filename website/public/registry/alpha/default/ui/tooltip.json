{
  "id": "ui/tooltip",
  "name": "Tooltip",
  "dependencies": [
    "@base-ui-components/react"
  ],
  "files": [
    {
      "path": "ui/tooltip.tsx",
      "content": "import * as React from \"react\";\nimport { Tooltip as Primitive } from \"@base-ui-components/react/tooltip\";\nimport { styled } from \"@pigment-css/react\";\n\nconst TooltipProvider = Primitive.Provider;\n\nconst Tooltip = Primitive.Root;\n\nconst TooltipTrigger = Primitive.Trigger;\n\nconst TooltipPositioner = Primitive.Positioner;\n\nconst TooltipContent = styled(Primitive.Popup, {\n  name: \"TooltipContent\",\n  slot: \"content\",\n})<React.ComponentProps<typeof Primitive.Popup>>({\n  backgroundColor: \"hsl(var(--color-primary))\",\n  borderRadius: \"var(--borderRadius-md)\",\n  color: \"hsl(var(--color-primaryForeground))\",\n  filter: \"drop-shadow(0px 2px 4px hsl(0 0% 0% / 6%))\",\n  fontSize: \"var(--fontSize-xs)\",\n  lineHeight: \"var(--lineHeight-tight)\",\n  outline: \"none\",\n  paddingBlock: \"calc(var(--size-unit) * 1.5)\",\n  paddingInline: \"calc(var(--size-unit) * 3)\",\n  zIndex: \"var(--zIndex-popover)\",\n});\n\nconst TooltipArrow = styled(Primitive.Arrow, {\n  name: \"TooltipArrow\",\n  slot: \"arrow\",\n})<React.ComponentProps<typeof Primitive.Arrow>>({\n  backgroundColor: \"hsl(var(--color-primary))\",\n  height: \"10px\",\n  transform: \"rotate(45deg)\",\n  width: \"10px\",\n  zIndex: \"var(--zIndex-hide)\",\n  \"&[data-side='top']\": {\n    insetBlockEnd: \"-5px\",\n  },\n  \"&[data-side='right']\": {\n    insetInlineStart: \"-5px\",\n  },\n  \"&[data-side='bottom']\": {\n    insetBlockStart: \"-5px\",\n  },\n  \"&[data-side='left']\": {\n    insetInlineEnd: \"-5px\",\n  },\n});\n\nexport {\n  TooltipProvider,\n  Tooltip,\n  TooltipArrow,\n  TooltipContent,\n  TooltipTrigger,\n  TooltipPositioner,\n};\n"
    }
  ]
}